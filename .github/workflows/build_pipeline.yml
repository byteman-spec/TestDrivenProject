name: build_pipeline

on:
  workflow_dispatch:
    inputs:
      branchInput:
        description: 'Remote branch to validate'
        required: true

      branchOutput:
        description: 'Remote branch to push to'
        required: true

jobs:
  Start_Pipeline:
    runs-on: ubuntu-latest
    permissions:
      contents:  write
    steps:
    - name: Checkout code with submodules recursively
      uses: actions/checkout@v3
      with:
        submodules: recursive
        
    - name: configure
      env:
        GIT_SSH_COMMAND: 'ssh -o StrictHostKeyChecking=no'
        GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
      run: |
        pwd
        git config --global user.email "explodefromdelhi@github.com"
        git config --global user.name "byteman-spec"
        git switch -c ${{ github.event.inputs.branchInput }}
        git pull origin ${{ github.event.inputs.branchInput }} 
        mkdir build
        cd build
        cmake ..

    - name: Build
      run: | 
        make -C build

    - name: Run Unit tests
      run: |
        cd build
        ctest -R CompilerTests
        
    - name: Initiate History_Sanitizer
      run: |
        pwd
        cd ind/sanitizer
        pwd
        git diff origin/main | grep -E "^\+\+\+ b|^[+-]#{1,2} [0-9]" > git_diff.txt 
        cat git_diff.txt
        

    - name: Run Sanitizer
      run: |
        pwd
        cd build
        ctest -R SanitizerTests || true
        cat /home/runner/work/TestDrivenProject/TestDrivenProject/build/Testing/Temporary/LastTest.log

    - name: Show Sanitizer Logs
      run: |
        pwd
        cat ind/sanitizer/sanityLog.txt
        cd ind/sanitizer
        ls
           


 # This job will run only if the previous jobs fail
 # This job will run only if the previous jobs fail
  Abort:
    runs-on: ubuntu-latest
    needs: Start_Pipeline
    if: failure()
    steps:
    - name: Exit_Pipeline
      run: exit 1

  Deploy:
    runs-on: ubuntu-latest
    needs: Start_Pipeline
    permissions:
      contents: write
    if: success()

    steps:
    - name: Checkout code with submodules recursively
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Push to input repository
      env:
        GIT_SSH_COMMAND: 'ssh -o StrictHostKeyChecking=no'
        GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
      run: |
        git config --global user.email "explodefromdelhi@github.com"
        git config --global user.name "byteman-spec"
        git switch -c ${{ github.event.inputs.branchInput }}
        git pull origin ${{ github.event.inputs.branchInput }} 
        git switch -c ${{ github.event.inputs.branchOutput }}
        git push -f origin ${{ github.event.inputs.branchOutput }}
