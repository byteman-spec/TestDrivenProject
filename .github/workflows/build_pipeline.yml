name: build_pipeline

on:
  workflow_dispatch:
    inputs:
      branchInput:
        description: 'Remote branch to validate'
        required: true

      branchOutput:
        description: 'Remote branch to push to'
        required: true
jobs:
  build_run_test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code with submodules recursively
      uses: actions/checkout@v3
      with:
        submodules: recursive
        
    - name: configure
      run: |
        mkdir build
        cd build
        cmake ..

    - name: make
      run: | 
        make -C build

    - name: run tests
      run: |
        cd build
        ctest

  history_validator:
    runs-on: ubuntu-latest
    needs: build_run_test
    permissions:
      contents: write
    if: success()
    steps:
    - name: Checkout code with submodules recursively
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Create diff file
      env:
        GIT_SSH_COMMAND: 'ssh -o StrictHostKeyChecking=no'
        GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
      run: |
        git config --global user.email "explodefromdelhi@github.com"
        git config --global user.name "byteman-spec"
        git switch -c ${{ github.event.inputs.branchInput }}
        git pull origin ${{ github.event.inputs.branchInput }} 
        git diff origin/main | grep -E "^/+/+/+ b ^[+-]#{1,2}"
        

# This job will run only if the previous jobs fail
 # This job will run only if the previous jobs fail
  stop_push:
    runs-on: ubuntu-latest
    needs: build_run_test
    if: failure()
    steps:
    - name: Stop Push and Show Error
      run: exit 1

  keep_push:
    runs-on: ubuntu-latest
    needs: build_run_test
    permissions:
      contents: write
    if: success()

    steps:
    - name: Checkout code with submodules recursively
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Push to input repository
      env:
        GIT_SSH_COMMAND: 'ssh -o StrictHostKeyChecking=no'
        GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
      run: |
        git config --global user.email "explodefromdelhi@github.com"
        git config --global user.name "byteman-spec"
        git switch -c ${{ github.event.inputs.branchInput }}
        git pull origin ${{ github.event.inputs.branchInput }} 
        git switch -c ${{ github.event.inputs.branchOutput }}
        git push -f origin ${{ github.event.inputs.branchOutput }}
        

